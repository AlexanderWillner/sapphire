name: CI

on:
  push:
    branches: [ main ]
  pull_request:

jobs:
  rust-macos-arm64:
    # Use the new M1 macOS 14 (Sonoma) runner, which is arm64-native 
    runs-on: macos-latest

    steps:
      - name: Check out code
        uses: actions/checkout@v3

      - name: Install Rust toolchain (Nightly) # <-- Updated name
        # macOS runners don’t come with Rust pre‑installed, so you need this 
        uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly # <-- Use nightly toolchain
          override: true
          components: clippy, rustfmt # Keep components

      - name: Cache cargo registry & build artifacts
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          # Include toolchain in cache key to avoid conflicts if you switch back/forth
          key: ${{ runner.os }}-cargo-nightly-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: | # Optional: allow restoring cache from stable if needed
            ${{ runner.os }}-cargo-nightly-
            ${{ runner.os }}-cargo-

      - name: Verify runner architecture
        run: |
          echo "UNAME reports: $(uname -m)"

      - name: Check formatting (using Nightly rustfmt) # <-- Updated name
        run: cargo fmt -- --check

      - name: Run linters (using Nightly clippy) # <-- Updated name
        run: cargo clippy -- -D warnings

      - name: Build
        run: cargo build --verbose

      - name: Run tests
        run: cargo test --verbose
        
